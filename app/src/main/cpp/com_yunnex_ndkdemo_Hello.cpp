/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdlib.h>
#include <string>
#include "MyLog.h"
/* Header for class com_yunnex_ndkdemo_Hello */


#ifndef _Included_com_yunnex_ndkdemo_Hello
#define _Included_com_yunnex_ndkdemo_Hello
using namespace std;
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_yunnex_ndkdemo_Hello
 * Method:    sayHello
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_yunnex_ndkdemo_Hello_sayHello
        (JNIEnv *env, jclass jclazz, jstring msg, jint count) {

    const char *str = env->GetStringUTFChars(msg, 0);
    printf("%s", str);
    printf("mymsg = %s\n", str);
    LOGI("string From Java To C : %s", str);

    string hello = "Hello from 我自定义";
    env->ReleaseStringUTFChars(msg, str);
    return env->NewStringUTF(hello.c_str());
}



/*
 * Class:     com_yunnex_ndkdemo_Hello
 * Method:    testJString
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_yunnex_ndkdemo_Hello_testJString
        (JNIEnv *env, jclass jclazz, jstring jstr){

    const char *str = "helloboy";
    LOGI("jst=%s",str);
    //转JNI字符串 utf-8
    jstring jstrUtf8 = env->NewStringUTF(str);

    const char *strUtf = env->GetStringUTFChars(jstr,NULL);
    LOGI("strUtf= %s \n",strUtf);

    char *subStr = new char;
    env->GetStringUTFRegion(jstr,0,3,subStr);
    LOGI("subStr= %s \n",subStr);

    //删除 Local Reference  创建的Local Reference过多 也会导致jvm内存耗光,发生崩溃
    env->DeleteLocalRef(jstrUtf8);
//    env->ReleaseStringUTFChars(jstrUtf8,str);
    env->ReleaseStringUTFChars(jstr,strUtf);
    env->ReleaseStringUTFChars(jstr,subStr);

}

const jchar* char2Jchar(JNIEnv *env,const char* chr){
    jstring jstrUtf8 = env->NewStringUTF(chr);
    return env->GetStringChars(jstrUtf8,NULL);
}


#ifdef __cplusplus
}
#endif
#endif
